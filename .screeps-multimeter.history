roomStats()
resourceStats()
clear
gcl()
roomStats()
roomStats()
test()
test()
gcl()
test()
test()
test()
test()
Game.shard.name
test()
gcl()
resourceStats()
JSON.parse(JSON.stringify([1,2,3])).pop
/help
cpu()
cpu()
cpu()
gcl()
cpu()
cpu()
Game.shard.name
/help
/help help
/help
/shard2
/reconnect
Game.shard.name
/reconnect
Game.shard.name
Game.shard.name
cpu()
Math.floor(23000 / 50000)
cpu()
cpu()
Game.shard.name
global.OS.kernel.addProcess('intershardBuilder', {room: 'W51S31', target: 'W59S39', flag: '123'}, 0)
global.OS.kernel.addProcess('intershardBuilder', {room: 'W51S31', target: 'W59S39', flag: '123'}, 0)
global.OS.kernel.addProcess('intershardBuilder', {room: 'W51S31', target: 'W59S39', flag: '123'}, 0)
global.OS.kernel.getProcessForMetaKeyValueCLI('intershardBuilder', 'room','W51S31').length
global.OS.kernel.getProcessForMetaKeyValueCLI('target','W59S39').length
global.OS.kernel.getProcessForMetaKeyValueCLI('target','W59S39').length
Memory.errors = []
cpu()
cpu()
cpu()
Game.shard.name
cpu()
roomStats()
cpu()
JSON.stringify()
JSON.stringify('')
JSON.stringify('<')
JSON.stringify('/ghj')
cpu()
JSON.stringify(Memory.scoutReports)
Game.market.credits
Game.shard.name
JSON.stringify(Object.values(Game.rooms).filter((aRoom: Room) => aRoom.controller && aRoom.controller.my))
if (Game.rooms.W50S20 && Game.rooms.W50S20.controller) console.log("yes")
(!Game.rooms.W50S20) console.log("Cookies is right")
if (!Game.rooms.W50S20) console.log("Cookies is right")
gcl()
JSON.stringify(Memory.rooms)
cpu()
Game.tick.time
Game.time
Game.shard.name
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 10)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
Math.floor(Math.random() * 4)
SetBlueprint('ES19S7', 'bunkers','1',37,27)
SetBlueprint('E19S7', 'bunkers','1',37,27)
OS.kernel.addProcess('remoteMining', {room: 'E19S7', target: 'E19S8', sourceID: '5d446991a7631f001632af7b'}, 0)
